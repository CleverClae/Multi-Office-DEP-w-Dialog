#!/bin/bash

####################################################################################################
#
# Variables
#
####################################################################################################
dialog=(/usr/local/bin/dialog) # Path to dialog app
dialog_command_file="/var/tmp/dialog.log"

function dialog_command(){
  echo "$1"
  echo "$1"  >> $dialog_command_file
}
function Installdialog() {
	gitusername="bartreardon"
	gitreponame="swiftDialog"
	appNewVersion=$(curl --silent --fail "https://api.github.com/repos/$gitusername/$gitreponame/releases/latest" | grep tag_name | cut -d '"' -f 4 | sed 's/[^0-9\.]//g')
	if [ -z "$appNewVersion" ]; then
		echo "could not retrieve version number for $gitusername/$gitreponame"
		appNewVersion=""
	else
		/bin/echo "Dialog WebSite Version: $appNewVersion"
	fi
	if ! test -d "${dialogAppLocation}"; then # Look to see if the Dialog App is Installed
		echo "Dialog App is not Installed"
		localDialogVersion="0.1"
	else
		localDialogVersion=$(dialog -v) # uses dialog variable set at top of Script
		/bin/echo "Dialog Local Version: $localDialogVersion"
	fi
	if [ ! "(dialog)" ] || [ "$localDialogVersion" != "$appNewVersion" ]; then # Check to See if Dialog is Installed and the Current Version
		## Variables for Dialog download
		expectedTeamID="PWA5E9TQ59"
		archiveName="/private/tmp/dialog.pkg"
		downloadURL=$(curl --silent --fail "https://api.github.com/repos/$gitusername/$gitreponame/releases/latest"| awk -F '"' "/browser_download_url/ { print \$4; exit }")
		/bin/echo "Current Dialog version is $localDialogVersion. The latest is $appNewVersion"
		if [[ "$localDialogVersion" == "$appNewVersion" ]]; then
			/bin/echo "Latest verison of Dialog installed"
		else
			/bin/echo "Dialog is either not installed or is not the latest version, downloading"
			if ! curl --silent -L --fail "$downloadURL" -o "$archiveName"; then ## Download Dialog
				/bin/echo "Error downloading $downloadURL"
				/bin/echo "Dialog download failed."
				if test -f "$archiveName"; then
					/bin/rm -f "$archiveName"
				fi
				Exit_Process 190
			fi
			if ! spctlout=$(spctl -a -vv -t install "$archiveName" 2>&1 ); then
				/bin/echo "Error verifying $archiveName"
				if test -f "$archiveName"; then
					/bin/rm -f "$archiveName"
				fi
				Exit_Process 191
			else
				teamID=$(/bin/echo "$spctlout" | awk -F '(' '/origin=/ {print $2 }' | tr -d '()' ) ## Check to make sure it's a valid PKG from the creator
				/bin/echo "Downloaded PKG Team ID: $teamID / Expected Team ID: $expectedTeamID"
				if [ "$expectedTeamID" != "$teamID" ]; then
					/bin/echo "Team IDs do not match"
					if test -f "$archiveName"; then
						/bin/rm -f "$archiveName"
					fi
					Exit_Process 192
				fi
			fi
			if ! installer -pkg "$archiveName" -tgt "/"; then ## Install Dialog
				/bin/echo  "Error installing $archiveName"
				if test -f "$archiveName"; then
					/bin/rm -f "$archiveName"
				fi
				Exit_Process 193
			else
				/bin/echo "Dialog Installed."
				if test -f "$archiveName"; then
					/bin/rm -f "$archiveName"
					/bin/echo "Dialog Installer Removed"
				fi
			fi
		fi
	else
		echo "Dialog Installed, Moving on..."
	fi
}
Installdialog
function iconBuild() {
	UPDATE_LOGO=""

	#Creating logo in tmp folder
	echo "${UPDATE_LOGO}" | base64 -D -o "/Library/Application Support/IPG/image.png" # Only add Logo if not theBACKGROUND_IMAGE="/tmp/image.png"

}
	if test -e "/Library/Application Support/IPG/image.png"; then
		echo "Background image loaded"
		else
		echo "Populating Base64  backgroung image "
		iconBuild
	fi
	
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Important Variables
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

ORG_NAME="IPG Health"
ICON_LOGO="/Library/Application Support/JAMF/Jamf.app/Contents/Resources/AppIcon.icns"
MESSAGE="What is your site?"
START_MESSAGE="Imaging in proccess please wait "
BACKGROUND_IMAGE="/Library/Application Support/IPG/image.png"
JAMFCOMMAND="/usr/local/bin/jamf policy -trigger"
currentUser=$(scutil <<< "show State:/Users/ConsoleUser" | awk '/Name :/ && ! /loginwindow/ { print $3 }')

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# For each configuration step (i.e., app to be installed), enter a pipe-separated list of:
# Display Name  -f1 | Filepath for validation -f2 | Jamf Pro Policy Custom Event Name  -f3| Icon hash -f4
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#Change -f3 for specific office 

apps=(
	"Global Protect|/Applications/GlobalProtect.app|NYC-FHC-Install_GlobalProtectVPN5210|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"
	"Google Chrome|/Applications/Google Chrome.app|NYC-FHC-Install-Chrome|9fa3f95e040d299a5fad28bb0d6c57a528bb8f0c9e775b0ecb830db5520e6d96"
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|NYC-FHC-Creative-Cloud|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Microsoft Edge|/Applications/Microsoft Edge.app|NYC-FHC-Install_MSEdge|98d4083f89e73d57866a6c790319050618d3fefbf851d0bc138ac9b4a55c67f7"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|NYC-FHC-Install-Microsoft-Office|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|NYC-FHC-Install_Zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|NYC-FHC-UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|NYC-FHC-Install-VLC|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|NYC-FHC-teamviewer|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
    "SafeQ 6|/Applications/Xerox PowerENGAGE.app|NYC-FHC-Safeq|6e3576dc7c9839246ac66380898d03b2d310d639e24e60202de4bd0f9e1f3326"
    "FCB Servers|/Applications/FCB Servers|NYC-FHC-fcbservers|d8b04640d60be03ea939dbbce9a175505f5a73ac216dbe94d62cbaf37fb1a389"
    "FCB Fonts|/Library/Fonts/Rockwell.ttf|NYC-FHC-fonts|010c77e70d7c8d33a47e100b5eb62cad0dd293f0f98147c9c48e246ce652a651"
	"FCB Templates|/Users/"${currentUser}"/Library/Group Containers/UBF8T346G9.Office/User Content.localized|NYC-FHC-FCBTEMPLATES|1fd01cb7e49863d8987a4a93904ba3c196c109f6f47a3df109fb16fa8ce6cee1"	
)
NYCARTapp=(
	"Global Protect|/Applications/GlobalProtect.app|NYC-ART-Install_GlobalProtectVPN5210|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"
	"Google Chrome|/Applications/Google Chrome.app|NYC-ART-Install-Chrome|9fa3f95e040d299a5fad28bb0d6c57a528bb8f0c9e775b0ecb830db5520e6d96"
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|NYC-ART-Creative|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Microsoft Edge|/Applications/Microsoft Edge.app|NYC-ART-Install_MSEdge|98d4083f89e73d57866a6c790319050618d3fefbf851d0bc138ac9b4a55c67f7"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|NYC-ART-Install-Microsoft-Office-Business-Pro|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|NYC-ART Install-Zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|NYC-ART-UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"Cysco Webex|/Applications/Webex.app|NYC-ART-Webex|0ff8a500918b6798752e6819ec764d4f8e6c6ddff595ba0b648ace05639a235c"
	"VLC Player|/Applications/VLC.app|NYC-ART-Install-VLC|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Easyfind|/Applications/Easyfind.app|NYC-ART-EasyFind|644e9f362a770d5803f387e0a8abcf29906d0865764d5c46fac0cd178adabc2b"
	"Cyberduck|/Applications/Cyberduck.app|NYC-ART-enrollCyberduck|61938002cdb959d27df2ac6307597068592902558437e05026528c39a750ea7e"
	"Teamviewer|/Applications/TeamViewerHost.app|NYC-ART-teamviewer|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
    "SafeQ 6|/Applications/Xerox PowerENGAGE.app|NYC-ART-Safeq6|6e3576dc7c9839246ac66380898d03b2d310d639e24e60202de4bd0f9e1f3326"
    "FCB Servers|/Applications/FCB Servers|NYC-ART-fcbservers|d8b04640d60be03ea939dbbce9a175505f5a73ac216dbe94d62cbaf37fb1a389"
    "FCB Fonts|/Library/Fonts/Rockwell.ttf|NYC-ART-FONTS|010c77e70d7c8d33a47e100b5eb62cad0dd293f0f98147c9c48e246ce652a651"
	"FCB Templates|/Users/"${currentUser}"/Library/Group Containers/UBF8T346G9.Office/User Content.localized|NYC-ART-FCBTEMPLATES|1fd01cb7e49863d8987a4a93904ba3c196c109f6f47a3df109fb16fa8ce6cee1"
)
NYCSRXapp=(
	"Global Protect|/Applications/GlobalProtect.app|vpn|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"
	"Google Chrome|/Applications/Google Chrome.app|googlechrome|9fa3f95e040d299a5fad28bb0d6c57a528bb8f0c9e775b0ecb830db5520e6d96"
    "Adobe Acrobat DC|/Applications/Adobe Acrobat DC/Adobe Acrobat.app|acrobat|3f3fd1622e880679a8ee52952cb66a92cf351d853b26112709a080897332e008"
    "Adobe Photoshop|/Applications/Adobe Photoshop 2022/Adobe Photoshop 2022.app|photoshop|f697f20019867ad4e9bbfad180105a3c2252ec570fbb607abbdba6c51cad311d"
    "Adobe Illustrator|/Applications/Adobe Illustrator 2022/Adobe Illustrator.app|illus|7a98c9efc026a8059df5532af122d5023c95d61c91b122ea79d8a1663b7ee122"
    "Adobe InDesign|/Applications/Adobe InDesign 2022/Adobe InDesign 2022.app|InDesign|544983f931e095f1719cda656835aadd843426a66f63070a572a7a71ead52556"
    "Adobe Bridge|/Applications/Adobe Bridge 2022/Adobe Bridge 2022.app|Bridge|3a9ca528d5c1c20ac31f0b9e106249467e2208707444ba2f6152ddda346c5afe"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|Office365|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|vlc|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|TeamViewer|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
    "SafeQ 6|/Applications/Xerox PowerENGAGE.app|safeq|6e3576dc7c9839246ac66380898d03b2d310d639e24e60202de4bd0f9e1f3326"
    "FCB Servers|/Applications/FCB Servers|fcbservers|d8b04640d60be03ea939dbbce9a175505f5a73ac216dbe94d62cbaf37fb1a389"
    "FCB Fonts|/Library/Fonts/Rockwell.ttf|fonts|010c77e70d7c8d33a47e100b5eb62cad0dd293f0f98147c9c48e246ce652a651"
	"FCB Templates|/Users/"${currentUser}"/Library/Group Containers/UBF8T346G9.Office/User Content.localized|FCBTEMPLATES|1fd01cb7e49863d8987a4a93904ba3c196c109f6f47a3df109fb16fa8ce6cee1"
)
NYCNEOapp=(
    "Global Protect|/Applications/GlobalProtect.app|NYC-NEO-vpn|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"
	"Google Chrome|/Applications/Google Chrome.app|NYC-NEO-chrome|9fa3f95e040d299a5fad28bb0d6c57a528bb8f0c9e775b0ecb830db5520e6d96"
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|NYC-NEO-Creative-Cloud|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Mozilla Firefox|/Applications/Firefox.app|NYC-NEO-Firefox|89ea09fda1e076eb5af72648ff8c93dda4f1d19a4c733e11c4cc7440e41fb85a"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|NYC-NEO-Microsoft-Business-Pro|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|NYC-NEO-zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|NYC-NEO-UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|NYC-NEO-vlc|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|NYC-NEO-TeamViewer|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
    "SafeQ 6|/Applications/Xerox PowerENGAGE.app|NYC-NEO-Safeq|6e3576dc7c9839246ac66380898d03b2d310d639e24e60202de4bd0f9e1f3326"
    "FCB Servers|/Applications/FCB Servers|NYC-NEO-fcbservers|d8b04640d60be03ea939dbbce9a175505f5a73ac216dbe94d62cbaf37fb1a389"
    "FCB Fonts|/Library/Fonts/Rockwell.ttf|NYC-NEO-fonts|010c77e70d7c8d33a47e100b5eb62cad0dd293f0f98147c9c48e246ce652a651"
	"FCB Templates|/Users/"${currentUser}"/Library/Group Containers/UBF8T346G9.Office/User Content.localized|NYC-NEO-FCBTEMPLATES|1fd01cb7e49863d8987a4a93904ba3c196c109f6f47a3df109fb16fa8ce6cee1"
)
PPYFCRapp=(
	"Global Protect|/Applications/GlobalProtect.app|vpn|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"
	"Google Chrome|/Applications/Google Chrome.app|chrome|9fa3f95e040d299a5fad28bb0d6c57a528bb8f0c9e775b0ecb830db5520e6d96"
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|PPY-FCR-Creative-Cloud|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Mozilla Firefox|/Applications/Firefox.app|firefox|89ea09fda1e076eb5af72648ff8c93dda4f1d19a4c733e11c4cc7440e41fb85a"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|Office365|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|vlc|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|TeamViewer|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
    "SafeQ 6|/Applications/Xerox PowerENGAGE.app|Safeq|6e3576dc7c9839246ac66380898d03b2d310d639e24e60202de4bd0f9e1f3326"
    "FCB Servers|/Applications/FCB Servers|fcbservers|d8b04640d60be03ea939dbbce9a175505f5a73ac216dbe94d62cbaf37fb1a389"
    "FCB Fonts|/Library/Fonts/Rockwell.ttf|fonts|010c77e70d7c8d33a47e100b5eb62cad0dd293f0f98147c9c48e246ce652a651"
	"FCB Templates|/Users/"${currentUser}"/Library/Group Containers/UBF8T346G9.Office/User Content.localized|FCBTEMPLATES|1fd01cb7e49863d8987a4a93904ba3c196c109f6f47a3df109fb16fa8ce6cee1"
)
GBRIHCapp=(
	"Global Protect|/Applications/GlobalProtect.app|NYC-FHC-Install_GlobalProtectVPN5210|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"
	"Google Chrome|/Applications/Google Chrome.app|NYC-FHC-Install-Chrome|9fa3f95e040d299a5fad28bb0d6c57a528bb8f0c9e775b0ecb830db5520e6d96"
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|NYC-FHC-Creative-Cloud|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Microsoft Edge|/Applications/Microsoft Edge.app|NYC-FHC-Install_MSEdge|98d4083f89e73d57866a6c790319050618d3fefbf851d0bc138ac9b4a55c67f7"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|NYC-FHC-Install-Microsoft-Office|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|NYC-FHC-Install_Zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|NYC-FHC-UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|NYC-FHC-Install-VLC|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|NYC-FHC-teamviewer|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
	### ADD FCB TEMPLATES ### NEED FILE LOCATION FOR APP CHECK FUNCTION ######
)
USAMHNJapps=(
	"Global Protect|/Applications/GlobalProtect.app|USA-MHNJ-Install-GlobalProtectVPN|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"  
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|USA-MHNJ-Install-CCDesktopApp|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|USA-MHNJ-Install-Microsoft-Office-Business-Pro|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|USA-MHNJ-Install_Zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|USA-MHNJ-Install-UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|USA-MHNJ-Install-VLC|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|USA-MHNJ-Install_teamviewerqs|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
)
NYCMHNYapps=(
	"Global Protect|/Applications/GlobalProtect.app|USA-MHNJ-Install-GlobalProtectVPN|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"  
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|USA-MHNJ-Install-CCDesktopApp|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|USA-MHNJ-Install-Microsoft-Office-Business-Pro|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|USA-MHNJ-Install_Zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|USA-MHNJ-Install-UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|USA-MHNJ-Install-VLC|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|USA-MHNJ-Install_teamviewerqs|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
)
SPLIHCapps=(
	"Global Protect|/Applications/GlobalProtect.app|USA-MHNJ-Install-GlobalProtectVPN|27586f39b50ba6722b5abff7dce6e4c0b10b5051e13eb710407f885cdf346f8a"  
	"Adobe Creative Cloud 2022|/Applications/Adobe XD/Adobe XD.app|USA-MHNJ-Install-CCDesktopApp|4f9a4f79d648e6a1850137e0444be39d8c17974dcfbbc370d41d4ffcd04926cc"
	"Microsoft Office 365|/Applications/Microsoft Teams.app|USA-MHNJ-Install-Microsoft-Office-Business-Pro|87f928080750588fa45de036f09fabc907da65cf021b7ac4a3d2f037bda3568f"
	"Zoom|/Applications/zoom.us.app|USA-MHNJ-Install_Zoom|90b660d090af165e0169f8ea56b65537c09aedac635aec93896fdba9bdb4924a"
	"Universal Type Client|/Applications/Universal Type Client.app|USA-MHNJ-Install-UTC|332afa05a467635545d1af7cf9cdfa3f680fb620b23ba5f1900412de08b8c2c2"
	"VLC Player|/Applications/VLC.app|USA-MHNJ-Install-VLC|c046a7faca2942b2826d24a7b03caefd775bd4c8aab6ce6fc9e714718d62cb63"
	"Teamviewer|/Applications/TeamViewerHost.app|USA-MHNJ-Install_teamviewerqs|117f2cd110bdc3e536cfa15679700fb6eb54c01306c0feeedea7064f82bb3a82"
)

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Site Variables
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

NYCFHCMESSAGE="Starting Image Proccess for NYC-FHC 

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

NYCARTMESSAGE="Starting Image Proccess for NYC-ART

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

NYCSRXMESSAGE="Starting Image Proccess for NYC-SRX 

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

NYCNEOMESSAGE="Starting Image Proccess for NYC-NEO 

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

PPYFCRMESSAGE="Starting Image Proccess for PPY-FCR

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

GBRIHCMESSAGE="Starting Image Proccess for GBR-IHC 

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

USAMHNJMESSAGE="Starting Image Proccess for USA-MHNJ 

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

NYCMNHYMESSAGE="Starting Image Proccess for NYC-MNHY 

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"

SPLIHCMESSAGE="Starting Image Proccess for SPL-IHC 

This Proccess can take anywhere from 35 - 45 min to complete

Please be patient...
"


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Initial Dialog Window 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

runDialog () {
    ${dialog} \
            --title "$ORG_NAME" \
            --alignment "center" \
            --centericon true \
            --iconsize "250" \
            --messagefont "size=16" \
            --background "$BACKGROUND_IMAGE" \
            --icon '/Library/Application Support/JAMF/Jamf.app/Contents/Resources/AppIcon.icns' \
            --message  "Please select your site to begin Imaging" bold \
            --selectvalues NYC-FHC,NYC-ART,NYC-SRX,NYC-NEO,PPY-FCR,GRB-IHC,NYC-MHNY,USA-MHNJ,SPL-IHC \
            --selecttitle "Select Your Office" \
            --selectdefault NYC-FHC \
            --button1text Start \
            --button2text Cancel \
            --button2action "exit 0" \
           
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Set Overlay Icon based on Self Service icon
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

overlayicon="/Library/Application Support/JAMF/Jamf.app/Contents/Resources/AppIcon.icns"
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Finalise app installations
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

function finalise(){
  dialog_command "icon: SF=checkmark.circle.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Installation of applications complete."
  sleep 5
  dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_90958d0e1f8f8287a86a1198d21cded84eeea44886df2b3357d909fe2e6f1296"
  dialog_command "progresstext: Updating computer inventory …"
  $JAMFCOMMAND CheckIn
  dialog_command "icon: SF=checkmark.seal.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Complete"
  dialog_command "progress: complete"
  dialog_command "button1text: Done"
  dialog_command "button1: enable"
  exit 0
}
function finaliseNYCFHC(){
  dialog_command "icon: SF=checkmark.circle.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Installation of applications complete."
  sleep 5
  dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_90958d0e1f8f8287a86a1198d21cded84eeea44886df2b3357d909fe2e6f1296"
  dialog_command "progresstext: Proccessing final Configurations …"
  $JAMFCOMMAND NYC-FHC-enrollJava8
  $JAMFCOMMAND NYC-FHC-enrolldock
  $JAMFCOMMAND CheckIn
  dialog_command "icon: SF=checkmark.seal.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Complete"
  dialog_command "progress: complete"
  dialog_command "button1text: Done"
  dialog_command "button1: enable"
  exit 0
}
function finaliseNYCART(){
  dialog_command "icon: SF=checkmark.circle.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Installation of applications complete."
  sleep 5
  dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_90958d0e1f8f8287a86a1198d21cded84eeea44886df2b3357d909fe2e6f1296"
  dialog_command "progresstext: Proccessing final configurations…"
  $JAMFCOMMAND NYC-ART-SMBSHAREFAST
  $JAMFCOMMAND NYC-ART-enrollJava8
  $JAMFCOMMAND NYC-ART-enrollJDK8
  $JAMFCOMMAND NYC-ART-enrolldock
  $JAMFCOMMAND CheckIn
  dialog_command "icon: SF=checkmark.seal.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Complete"
  dialog_command "progress: complete"
  dialog_command "button1text: Done"
  dialog_command "button1: enable"
  exit 0
}
function finalisePPYFCR(){
  dialog_command "icon: SF=checkmark.circle.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Installation of applications complete."
  sleep 5
  dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_90958d0e1f8f8287a86a1198d21cded84eeea44886df2b3357d909fe2e6f1296"
  dialog_command "progresstext: Proccessing final configurations ……"
  $JAMFCOMMAND smbfix
  $JAMFCOMMAND config
  $JAMFCOMMAND name
  $JAMFCOMMAND CheckIn
  dialog_command "icon: SF=checkmark.seal.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Complete"
  dialog_command "progress: complete"
  dialog_command "button1text: Done"
  dialog_command "button1: enable"
  exit 0
}
function finaliseNYCSRX(){
  dialog_command "icon: SF=checkmark.circle.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Installation of applications complete."
  sleep 5
  dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_90958d0e1f8f8287a86a1198d21cded84eeea44886df2b3357d909fe2e6f1296"
  dialog_command "progresstext: Proccessing final Configurations …"
  $JAMFCOMMAND NYC-SRX-InstallRosetta2
  $JAMFCOMMAND NYC-SRX-Install-QualysAgent
  $JAMFCOMMAND SRXNAME
  $JAMFCOMMAND smbfix
  $JAMFCOMMAND enrolldock
  $JAMFCOMMAND CheckIn
  dialog_command "icon: SF=checkmark.seal.fill,weight=bold,colour1=#00ff44,colour2=#075c1e"
  dialog_command "progresstext: Complete"
  dialog_command "progress: complete"
  dialog_command "button1text: Done"
  dialog_command "button1: enable"
  exit 0
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Check for app installation
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

function appCheck(){
    if  [ -e "$(echo "$app" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$app" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$app" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function NYCARTappCheck(){
    if  [ -e "$(echo "$NYCARTapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$NYCARTapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$NYCARTapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function NYCSRXappCheck(){
    if  [ -e "$(echo "$NYCSRXapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$NYCSRXapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$NYCSRXapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function NYCNEOappCheck(){
    if  [ -e "$(echo "$NYCNEOapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$NYCNEOapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$NYCNEOapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function PPYFCRappCheck(){
    if  [ -e "$(echo "$PPYFCRapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$PPYFCRapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$PPYFCRapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function GBRIHCappCheck(){
    if  [ -e "$(echo "$GBRIHCapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$GBRIHCapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$GBRIHCapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function USAMHNJappCheck(){
    if  [ -e "$(echo "$USAMHNJapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$USAMHNJapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$USAMHNJapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function NYCMHNYappCheck(){
    if  [ -e "$(echo "$NYCMHNYapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$NYCMHNYapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$NYCMHNYapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

function SPLIHCappCheck(){
    if  [ -e "$(echo "$SPLIHCapp" | cut -d '|' -f2)" ]; then
        dialog_command "listitem: $(echo "$SPLIHCapp" | cut -d '|' -f1): success"
    else
        dialog_command "listitem: title: $(echo "$SPLIHCapp" | cut -d '|' -f1), status: fail, statustext: Failed"
    fi
    dialog_command "progress: increment"
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Create the list of apps
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
listitems=""
for app in "${apps[@]}"; do
  listitems="$listitems --listitem '$(echo "$app" | cut -d '|' -f1)'"
done

NYCARTlistitems=""
for NYCARTapp in "${NYCARTapp[@]}"; do
  NYCARTlistitems="$NYCARTlistitems --listitem '$(echo "$NYCARTapp" | cut -d '|' -f1)'"
done

NYCSRXlistitems=""
for NYCSRXapp in "${NYCSRXapp[@]}"; do
  NYCSRXlistitems="$NYCSRXlistitems --listitem '$(echo "$NYCSRXapp" | cut -d '|' -f1)'"
done

NYCNEOlistitems=""
for NYCNEOapp in "${NYCNEOpp[@]}"; do
  NYCNEOlistitems="$NYCNEOlistitems --listitem '$(echo "$NYCNEOapp" | cut -d '|' -f1)'"
done

PPYFCRlistitems=""
for PPYFCRapp in "${PPYFCRapp[@]}"; do
  PPYFCRlistitems="$PPYFCRlistitems --listitem '$(echo "$PPYFCRapp" | cut -d '|' -f1)'"
done

USAMHNJlistitems=""
for USAMHNJapp in "${USAMHNJapp[@]}"; do
  USAMHNJlistitems="$USAMHNJlistitems --listitem '$(echo "$USAMHNJapp" | cut -d '|' -f1)'"
done

NYCMHNYlistitems=""
for  NYCMHNYapp in "${NYCMHNYapp[@]}"; do
   NYCMHNYlistitems="$ NYCMHNYlistitems --listitem '$(echo "$NYCMHNYapp" | cut -d '|' -f1)'"
done

GBRIHClistitems=""
for GBRIHCapp in "${GBRIHCapp[@]}"; do
  GBRIHClistitems="$GBRIHClistitems --listitem '$(echo "$GBRIHCapp" | cut -d '|' -f1)'"
done

SPLIHClistitems=""
for SPLIHCapp in "${SPLIHCapp[@]}"; do
  SPLIHClistitems="$SPLIHClistitems --listitem '$(echo "$SPLIHCapp" | cut -d '|' -f1)'"
done

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Start of Proccess
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
SELECTION=$(eval "runDialog"| grep "SelectedOption" | awk -F ": " '{print $NF}')

case "$SELECTION" in
   "NYC-FHC") echo "Starting Image Proccess for NYC-FHC" 
        dialog -t --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO" --background "$BACKGROUND_IMAGE" --button1text Start --message  "$NYCFHCMESSAGE" ;
       
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$listitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for app in "${apps[@]}"; do
        dialog_command "listitem: title: $(echo "$app" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for app in "${apps[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$app" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$app" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$app" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$app" | cut -d '|' -f3 )" -verbose
        appCheck &
    done

    wait)
  
    finaliseNYCFHC
   ;;
   "NYC-ART") echo "Starting Image Proccess for NYC-ART" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$NYCARTMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$NYCARTlistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for NYCARTapp in "${NYCARTapp[@]}"; do
        dialog_command "listitem: title: $(echo "$NYCARTapp" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for NYCARTapp in "${NYCARTapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$NYCARTapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$NYCARTapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$NYCARTapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$NYCARTapp" | cut -d '|' -f3 )" -verbose
        NYCARTappCheck &
    done

    wait)

    finaliseNYCART
   ;;
   "NYC-SRX") echo "Starting Image Proccess for NYC-SRX" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$NYCSRXMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$NYCSRXlistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for NYCSRXapp in "${NYCSRXapp[@]}"; do
        dialog_command "listitem: title: $(echo "$NYCSRX" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for NYCSRXapp in "${NYCSRXapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$NYCSRXapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$NYCSRXapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$NYCSRXapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$NYCSRXapp" | cut -d '|' -f3 )" -verbose
        appCheck &
    done

    wait)

    finaliseNYCSRX
   ;;
   "NYC-NEO") echo "Starting Image Proccess for NYC-NEO" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$NYCNEOMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$NYCNEOlistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for NYCNEOapp in "${NYCNEOapp[@]}"; do
        dialog_command "listitem: title: $(echo "$app" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for NYCNEOapp in "${NYCNEOapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$NYCNEOapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$NYCNEOapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$NYCNEOapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$NYCNEOapp" | cut -d '|' -f3 )" -verbose
        appCheck &
    done

    wait)

    finalise
   ;;
   "PPY-FCR") echo "Starting Image Proccess for PPY-FCR" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$PPYFCRMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$PPYFCRlistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for PPYFCRapp in "${PPYFCRapp[@]}"; do
        dialog_command "listitem: title: $(echo "$PPYFCRapp" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for PPYFCRapp in "${PPYFCRapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$PPYFCRapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$PPYFCRapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$PPYFCRapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$PPYFCRapp" | cut -d '|' -f3 )" -verbose
        appCheck &
    done

    wait)

    finalisePPYFCR
   ;;
   "GBR-IHC") echo "Starting Image Proccess for GBR-IHC" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$GBRIHCMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$GBRIHClistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for GBRIHCapp in "${GBRIHCapp[@]}"; do
        dialog_command "listitem: title: $(echo "$GBRIHCapp" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for GBRIHCapp in "${GBRIHCapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$GBRIHCapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$GBRIHCapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$GBRIHCapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$GBRIHCapp" | cut -d '|' -f3 )" -verbose
        appCheck &
    done

    wait)

    GBRIHCfinalise
   ;;
   "USA-MHNJ") echo "Starting Image Proccess for USA-MHNJ" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$GBRIHCMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$USAMHNJlistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for USAMHNJapp in "${USAMHNJapp[@]}"; do
        dialog_command "listitem: title: $(echo "$GBRIHCapp" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for USAMHNJapp in "${USAMHNJapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$USAMHNJapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$USAMHNJapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$USAMHNJapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$USAMHNJapp" | cut -d '|' -f3 )" -verbose
        appCheck &
    done

    wait)

    USAMHNJfinalise
   ;;
   "NYC-MHNY") echo "Starting Image Proccess for NYC-MHNY" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$GBRIHCMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$NYCMHNYlistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for NYCMHNYapp in "${NYCMHNYapp[@]}"; do
        dialog_command "listitem: title: $(echo "$NYCMHNYapp" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for NYCMHNYapp in "${NYCMHNYapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$NYCMHNYapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$NYCMHNYapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$NYCMHNYapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$NYCMHNYapp" | cut -d '|' -f3 )" -verbose
        appCheck &
    done

    wait)

    NYCMHNYfinalise
   ;;
   "SPL-IHC") echo "Starting Image Proccess for SPL-IHC" 
        dialog -t  --title "$ORG_NAME"  --alignment "center"  --centericon true  --iconsize "250"  --messagefont size=16,bold  --icon "$ICON_LOGO"  --button1text Start --message  "$SPLIHCMESSAGE"
        dialogCMD="$dialog -p --title \"${ORG_NAME}\" \
                --message \"${START_MESSAGE}\" \
                --icon \"$ICON_LOGO\" \
                --progress $progress_total \
                --background \"${BACKGROUND_IMAGE}\" \
                --button1text \"Please Wait\" \
                --button1disabled \
                --ontop \
                --"$SPLIHClistitems" \
                --overlayicon \"$overlayicon\" \
                --titlefont 'size=28' \
                --messagefont 'size=14' \
                --quitkey b"

        eval "$dialogCMD" &
            sleep 2
            
    for SPLIHCapp in "${SPLIHCapp[@]}"; do
        dialog_command "listitem: title: $(echo "$SPLIHCapp" | cut -d '|' -f1), status: wait, statustext: Pending"
    done

    (for SPLIHCapp in "${SPLIHCapp[@]}"; do
        dialog_command "icon: https://ics.services.jamfcloud.com/icon/hash_$(echo "$SPLIHCapp" | cut -d '|' -f4)"
        dialog_command "listitem: title: $(echo "$SPLIHCapp" | cut -d '|' -f1), status: pending, statustext: Installing"
        dialog_command "progresstext: Installing $(echo "$SPLIHCapp" | cut -d '|' -f1) … this will take some time"
        /usr/local/bin/jamf policy -event "$(echo "$SPLIHCapp" | cut -d '|' -f3 )" -verbose
        SPLIHCappCheck &
    done

    wait)

    SPLIHCfinalise
   ;;

esac



exit 0
